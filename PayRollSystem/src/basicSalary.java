import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DELL
 */
public class basicSalary extends javax.swing.JFrame {

    
    
    
    /**
     * Creates new form basicSalary
     */
    public basicSalary() {
        initComponents();
        
        Connection conn;
        String url = "jdbc:sqlite:D:/Java Codes (Practices)/7.Salary Processing System/PayRollSystem/Database/database.db";
        
        try{
        
                conn = DriverManager.getConnection(url);
                String sql = "SELECT MID,Name FROM PersonalDetails";
                PreparedStatement pst = conn.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                int n = 1;
                
                while(rs.next()){
                    String NO = Integer.toString(n);
                    String MID = rs.getString("MID");
                    String Name = rs.getString("Name");
                    
                    // load data to table-----------------------
                    
                    String dataT[] = {NO, MID, Name};
                    
                    DefaultTableModel tb1Model = (DefaultTableModel)jTable1.getModel();
                    tb1Model.addRow(dataT);
                    
                    n++;
                    
                }
        
                conn.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Database Error");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        mid = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        basicsalary = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        bokeallowance = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        lunchallowance = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        bonus = new javax.swing.JTextField();
        reset = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Trajan Pro", 1, 22)); // NOI18N
        jLabel1.setText("Basic Salary Details");

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setText("Name");

        mid.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        mid.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        mid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                midKeyPressed(evt);
            }
        });

        name.setEditable(false);
        name.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        name.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel3.setText("Member ID");

        basicsalary.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        basicsalary.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        basicsalary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                basicsalaryKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel4.setText("Basic Salary");

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel5.setText("Bike Allowance");

        bokeallowance.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        bokeallowance.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        bokeallowance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bokeallowanceKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel6.setText("Lunch Allowance");

        lunchallowance.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        lunchallowance.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        lunchallowance.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lunchallowanceKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel7.setText("Bonus");

        bonus.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        bonus.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        bonus.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bonusKeyPressed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        reset.setText("Reset");
        reset.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        cancel.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        cancel.setText("Cancel");
        cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        save.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        save.setText("Save");
        save.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NO", "MID", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(35);
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(35);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(35);
            jTable1.getColumnModel().getColumn(1).setMinWidth(65);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(65);
            jTable1.getColumnModel().getColumn(1).setMaxWidth(65);
        }

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Load  Table"); // NOI18N
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(bokeallowance, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(lunchallowance, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(bonus, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(basicsalary, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mid, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(basicsalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bokeallowance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lunchallowance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void LoadData(){
    
    }
    private void midKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_midKeyPressed
        int keypad = evt.getKeyCode();
        
        if(keypad == KeyEvent.VK_ENTER){
            if(mid.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter Member ID");
            }
            else{
                Connection conn;
                String url = "jdbc:sqlite:D:/Java Codes (Practices)/7.Salary Processing System/PayRollSystem/Database/database.db";
                
                try{
                
                    conn = DriverManager.getConnection(url);
                    
                    String sql = "SELECT Name FROM PersonalDetails WHERE MID = ?";
                    PreparedStatement pst = conn.prepareStatement(sql);
                    pst.setString(1,mid.getText());
                    ResultSet rs = pst.executeQuery();
                    String item_name = null;
                    while(rs.next()){
                        item_name = rs.getString(1);
                    }
                     
                    if(item_name.isEmpty()){
                        JOptionPane.showMessageDialog(null, "Invalid Member ID");
                    }else{
                        name.setText(item_name);
                        basicsalary.requestFocus();
                    }
              
                }catch(SQLException e){
                    System.out.println("Error - "+ e);
                }catch(NullPointerException e1){
                    JOptionPane.showMessageDialog(null, "Invalid Entry");
                }
            }
        }
        else if(keypad == KeyEvent.VK_ESCAPE){
            dispose();
        }
        else if(keypad == KeyEvent.VK_F5){
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new basicSalary().setVisible(true);
                }
            });

            dispose();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_midKeyPressed

    private void nameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameKeyPressed

    private void basicsalaryKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_basicsalaryKeyPressed
        // TODO add your handling code here:
        int keypad = evt.getKeyCode();
        if(keypad == KeyEvent.VK_ENTER){
            if(basicsalary.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter Basic Salary");
            }else{
                bokeallowance.requestFocus();
            }
        }else if(keypad == KeyEvent.VK_ESCAPE){
            dispose();
        }
        else if(keypad == KeyEvent.VK_F5){
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new basicSalary().setVisible(true);
                }
            });

            dispose();
        }
    }//GEN-LAST:event_basicsalaryKeyPressed

    private void bokeallowanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bokeallowanceKeyPressed
        // TODO add your handling code here:
        int keypad = evt.getKeyCode();
        if(keypad == KeyEvent.VK_ENTER){
            lunchallowance.requestFocus();
        }else if(keypad == KeyEvent.VK_ESCAPE){
            dispose();
        }
        else if(keypad == KeyEvent.VK_F5){
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new basicSalary().setVisible(true);
                }
            });

            dispose();
        }
    }//GEN-LAST:event_bokeallowanceKeyPressed

    private void lunchallowanceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lunchallowanceKeyPressed
        // TODO add your handling code here:
        int keypad = evt.getKeyCode();
        if(keypad == KeyEvent.VK_ENTER){
            bonus.requestFocus();
        }else if(keypad == KeyEvent.VK_ESCAPE){
            dispose();
        }
        else if(keypad == KeyEvent.VK_F5){
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new basicSalary().setVisible(true);
                }
            });

            dispose();
        }
    }//GEN-LAST:event_lunchallowanceKeyPressed

    private void bonusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bonusKeyPressed
        // TODO add your handling code here:
        int keypad = evt.getKeyCode();
        if(keypad == KeyEvent.VK_ENTER){
            save.requestFocus();
        }else if(keypad == KeyEvent.VK_ESCAPE){
            dispose();
        }
        else if(keypad == KeyEvent.VK_F5){
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new basicSalary().setVisible(true);
                }
            });

            dispose();
        }
    }//GEN-LAST:event_bonusKeyPressed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new basicSalary().setVisible(true);
            }
            
        });

        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_resetActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_cancelActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        Connection conn;
        try{
            String url = "jdbc:sqlite:D:/Java Codes (Practices)/7.Salary Processing System/PayRollSystem/Database/database.db";
            conn = DriverManager.getConnection(url);
            
            String sql = "SELECT MID FROM BasicSalaryDetails WHERE MID = ?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1, mid.getText());
            ResultSet rs = pst.executeQuery();
            
            String id = null;
            
            while(rs.next()){
                id = rs.getString(1);
            }
            
            if(id==null){
                    String sql1 = "INSERT INTO BasicSalaryDetails VALUES (?,?,?,?,?)";
                    PreparedStatement pst1 = conn.prepareStatement(sql1);
                    pst1.setString(1, mid.getText());
                    pst1.setString(2, basicsalary.getText());
                    pst1.setString(3, bokeallowance.getText());
                    pst1.setString(4, lunchallowance.getText());
                    pst1.setString(5, bonus.getText());
                    pst1.execute();

                    JOptionPane.showMessageDialog(null, "Data Saved Successfully!");
                    dispose();
           
            }
            
            if(mid.getText().equals(id)){
                int res = JOptionPane.showConfirmDialog(null,"Details of "+mid.getText()+" are already added.\nDo you want to update details?","Warning",JOptionPane.YES_NO_OPTION);
                if(res == 0){
                    String sql2 = "UPDATE BasicSalaryDetails SET BasicSalary=?, BikeAllowance=?, LunchAllowance=?, Bonus=? WHERE MID = ?";
                    PreparedStatement pst2 = conn.prepareStatement(sql2);
                    pst2.setString(1,basicsalary.getText());
                    pst2.setString(2,bokeallowance.getText());
                    pst2.setString(3, lunchallowance.getText());
                    pst2.setString(4, bonus.getText());
                    pst2.setString(5, mid.getText());
                    pst2.execute();

                    JOptionPane.showMessageDialog(null, "Data Updated Successfully!");
                    dispose();
                }else{
                    dispose();
                }
            }
            
            rs.close();
            conn.close();
        
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Database connection error!!!");
            System.out.println(e);
        }catch(Exception e1){
            JOptionPane.showMessageDialog(null, "Error Found!!!");
            System.out.println(e1);
        }
    }//GEN-LAST:event_saveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Connection conn;
        String url = "jdbc:sqlite:D:/Java Codes (Practices)/7.Salary Processing System/PayRollSystem/Database/database.db";
        
        try{
        
                conn = DriverManager.getConnection(url);
                String sql = "SELECT MID,Name FROM PersonalDetails";
                PreparedStatement pst = conn.prepareStatement(sql);
                ResultSet rs = pst.executeQuery();
                int n = 1;
                
                while(rs.next()){
                    String NO = Integer.toString(n);
                    String MID = rs.getString("MID");
                    String Name = rs.getString("Name");
                    
                    // load data to table-----------------------
                    
                    String dataT[] = {NO, MID, Name};
                    
                    DefaultTableModel tb1Model = (DefaultTableModel)jTable1.getModel();
                    tb1Model.addRow(dataT);
                    
                    n++;
                    
                }
        
                conn.close();
        }
        catch(SQLException e){
            JOptionPane.showMessageDialog(null, "Database Error");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(basicSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(basicSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(basicSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(basicSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new basicSalary().setVisible(true);
            }
        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField basicsalary;
    private javax.swing.JTextField bokeallowance;
    private javax.swing.JTextField bonus;
    private javax.swing.JButton cancel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lunchallowance;
    private javax.swing.JTextField mid;
    private javax.swing.JTextField name;
    private javax.swing.JButton reset;
    private javax.swing.JButton save;
    // End of variables declaration//GEN-END:variables
}
