import java.awt.event.KeyEvent;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Connection;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author DELL
 */
public class processSalary extends javax.swing.JFrame {
    
    int monthV =0 ;

    /**
     * Creates new form processSalary
     */
    public processSalary() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        mid = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        month = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        year = new javax.swing.JComboBox<>();
        processsalary = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        basicsalary = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        bikeallowance = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        lunchallowance = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        ot = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        loan = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        monthlysalary = new javax.swing.JTextField();
        cancel = new javax.swing.JButton();
        save = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        bonus = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Trajan Pro", 1, 22)); // NOI18N
        jLabel1.setText("Process Salary");

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel4.setText("Member ID");

        mid.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        mid.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        mid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                midKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel5.setText("Month");

        month.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        month.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select Month-", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        month.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                monthKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel6.setText("Year");

        year.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Select Year-", "2022", "2023", "2024", "2025", "2026", "2027", "2028", "2029", "2030" }));
        year.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                yearKeyPressed(evt);
            }
        });

        processsalary.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        processsalary.setText("Process Salary");
        processsalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processsalaryActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel7.setText("Basic Salary");

        basicsalary.setEditable(false);
        basicsalary.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        basicsalary.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        basicsalary.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel8.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel8.setText("Bike Allowance");

        bikeallowance.setEditable(false);
        bikeallowance.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        bikeallowance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        bikeallowance.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel9.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel9.setText("Lunch Allowance");

        lunchallowance.setEditable(false);
        lunchallowance.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        lunchallowance.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lunchallowance.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel10.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel10.setText("OT Payment");

        ot.setEditable(false);
        ot.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        ot.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ot.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel11.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel11.setText("Loan Payment");

        loan.setEditable(false);
        loan.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        loan.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        loan.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        jLabel12.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel12.setText("Monthly Salary");

        monthlysalary.setEditable(false);
        monthlysalary.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        monthlysalary.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        monthlysalary.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        cancel.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        save.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        reset.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel13.setText("Bonus");

        bonus.setEditable(false);
        bonus.setFont(new java.awt.Font("Segoe UI", 0, 15)); // NOI18N
        bonus.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        bonus.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(mid, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(processsalary, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(basicsalary, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(bikeallowance, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(45, 45, 45)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(ot, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(loan, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(bonus, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(monthlysalary, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lunchallowance, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 1, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(mid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(month, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(year, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(processsalary)
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(basicsalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(ot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(bikeallowance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(bonus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lunchallowance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(loan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(monthlysalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(save, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void yearKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearKeyPressed
        // TODO add your handling code here:
        int keypad = evt.getKeyCode();
        if(keypad == KeyEvent.VK_ENTER){
            if(year.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(null, "Select Year");
            }else{
                processsalary.requestFocus();
            }
        }else if(keypad == KeyEvent.VK_ESCAPE){
            dispose();
        }
    }//GEN-LAST:event_yearKeyPressed

    private void processsalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processsalaryActionPerformed
        // TODO add your handling code here:
        Connection conn;
        try{
            String url = "jdbc:sqlite:D:/Java Codes (Practices)/7.Salary Processing System/PayRollSystem/Database/database.db";
            conn = DriverManager.getConnection(url);
            
            String sql1 = "SELECT BasicSalary,BikeAllowance,LunchAllowance,Bonus FROM BasicSalaryDetails WHERE MID = ?";
            PreparedStatement pst1 = conn.prepareStatement(sql1);
            pst1.setString(1, mid.getText());
            ResultSet rs1 = pst1.executeQuery();
            String b_salary = null, bike_al = null, lunch_al = null, bonus_s = null;
            while(rs1.next()){
                b_salary = rs1.getString(1);
                bike_al = rs1.getString(2);
                lunch_al = rs1.getString(3);
                bonus_s = rs1.getString(4);
            }
            basicsalary.setText(b_salary);
            bikeallowance.setText(bike_al);
            lunchallowance.setText(lunch_al);
            bonus.setText(bonus_s);
            
            
            String sql2 = "SELECT payment FROM ot WHERE (mid =? AND month = ? AND year=?)";
            PreparedStatement pst2 = conn.prepareStatement(sql2);
            pst2.setString(1, mid.getText());
            pst2.setString(2, month.getSelectedItem().toString());
            pst2.setString(3, year.getSelectedItem().toString());
            ResultSet rs2 = pst2.executeQuery();
            String ot_p = null;
            while(rs2.next()){
                ot_p = rs2.getString(1);
            }
            ot.setText(ot_p);
            
            String sql3 = "SELECT MID,loanNo,loanAmount FROM loanDetails WHERE MID = ?";
            PreparedStatement pst3 = conn.prepareStatement(sql3);
            pst3.setString(1, mid.getText());
            ResultSet rs3 = pst3.executeQuery();
            float totalLoan = 0;
            String loanAmount = null, loanNumber = null , m_id = null;
            while(rs3.next()){
                m_id = rs3.getString(1);
                loanNumber = rs3.getString(2);
                loanAmount = rs3.getString(3);
                if(m_id == null ? mid.getText() == null : m_id.equals(mid.getText())){
                    String sql4 = "SELECT RemainingMonths FROM LoanRemains WHERE LoanNo = ?";
                    PreparedStatement pst4 = conn.prepareStatement(sql4);
                    pst4.setString(1, loanNumber);
                    ResultSet rs4 = pst4.executeQuery();
                    String remainingM = null;
                    while(rs4.next()){
                        remainingM = rs4.getString(1);
                        if(Float.parseFloat(remainingM)>0){
                            totalLoan += Float.parseFloat(loanAmount);
                        }
                    }
                }
            }
            
            loan.setText(String.valueOf(totalLoan));
            
            float month_Sal = + Float.parseFloat(b_salary)+Float.parseFloat(bike_al)
                    +Float.parseFloat(lunch_al)+Float.parseFloat(bonus_s)+Float.parseFloat(ot_p)-totalLoan;
            
            monthlysalary.setText(String.valueOf(month_Sal));
       
            conn.close();
        }catch(SQLException e){
            System.out.println(e);
        }
    }//GEN-LAST:event_processsalaryActionPerformed

    private void midKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_midKeyPressed
        // TODO add your handling code here:
        int keypad = evt.getKeyCode();
        
        if(keypad == KeyEvent.VK_ENTER){
            if(mid.getText().isEmpty()){
                JOptionPane.showMessageDialog(null, "Enter MID");
            }else{
                Connection conn;
                try{
                    String url = "jdbc:sqlite:D:/Java Codes (Practices)/7.Salary Processing System/PayRollSystem/Database/database.db";
                    conn = DriverManager.getConnection(url);
                    
                    String sql = "SELECT MID FROM PersonalDetails WHERE MID = ?";
                    PreparedStatement pst = conn.prepareStatement(sql);
                    pst.setString(1, mid.getText());
                    ResultSet rs = pst.executeQuery();
                    String miden = "";
                    while(rs.next()){
                        miden = rs.getString(1);
                    }
                    
                    conn.close();
                    
                    if(miden == null ? mid.getText() == null : miden.equals(mid.getText())){
                        month.requestFocus();
                    }else{
                        JOptionPane.showMessageDialog(null, "Invalid MID");
                    }
                }catch(SQLException e){
                    System.out.println(e);
                }
            }
        }else if(keypad == KeyEvent.VK_ESCAPE){
            dispose();
        }
    }//GEN-LAST:event_midKeyPressed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
        dispose();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new processSalary().setVisible(true);
            }
        });
    }//GEN-LAST:event_resetActionPerformed

    private void monthKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_monthKeyPressed
        // TODO add your handling code here:
        int keypad = evt.getKeyCode();
        if(keypad == KeyEvent.VK_ENTER){
            if(month.getSelectedIndex() == 0){
                JOptionPane.showMessageDialog(null, "Select Month");
            }else{
                year.requestFocus();
            }
        }
    }//GEN-LAST:event_monthKeyPressed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        Connection conn;
        try{
            String url = "jdbc:sqlite:D:/Java Codes (Practices)/7.Salary Processing System/PayRollSystem/Database/database.db";
            conn = DriverManager.getConnection(url);
            
            String sql = "INSERT INTO monthlySalary VALUES ?,?,?,?";
            PreparedStatement pst = conn.prepareStatement(sql);
            pst.setString(1,mid.getText());
            pst.setString(2, month.getSelectedItem().toString());
            pst.setString(3, year.getSelectedItem().toString());
            pst.setString(4, monthlysalary.getText());
            pst.execute();
            
            String sql2 = "";
        }catch(SQLException e){
            System.out.println(e);
        }
    }//GEN-LAST:event_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(processSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(processSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(processSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(processSalary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new processSalary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField basicsalary;
    private javax.swing.JTextField bikeallowance;
    private javax.swing.JTextField bonus;
    private javax.swing.JButton cancel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField loan;
    private javax.swing.JTextField lunchallowance;
    private javax.swing.JTextField mid;
    private javax.swing.JComboBox<String> month;
    private javax.swing.JTextField monthlysalary;
    private javax.swing.JTextField ot;
    private javax.swing.JButton processsalary;
    private javax.swing.JButton reset;
    private javax.swing.JButton save;
    private javax.swing.JComboBox<String> year;
    // End of variables declaration//GEN-END:variables
}
